---
title:    'Git & GitHub 101 - Explore GitHub'
layout:   presentation
noindex:  true
---

| # Explore GitHub

  ---

  ## Topics

  - `$ git init`
  - `$ git commit`
  - `$ git branch`
  - `$ git remote`
  - `$ git merge`

  ---

  ## Prerequisites

  --

  ### Remember the basics

  [try.github.io](https://try.github.io/)

  _15 min challenge!_

  ---

  ## Markdown EVERYTHING

  --

  ### Start with a `README.md`

  [Mastering the GitHub Markdown](https://guides.github.com/features/mastering-markdown/)

  --

  _When a new coworker wonder<br>if there is a doc for the project_

  ![Documentation](/assets/images/middleman/documentation.gif)

  --

  ### How to fix the onboarding issue ?

  Write an [awesome Readme](https://github.com/flexbox/codeless/blob/master/README.md) for EVERY PROJECTS

  --

  ### How to fix the onboarding issue ?

  add a `CONTRIBUTING.md`

  ![Documentation](/assets/images/git/contributing.png)

  ---

  ## Best practices

  --

  ### Respect the tree

  ![Documentation](/assets/images/git/tree.png)

  The reasons for these conventions:

  - automatic generating of the changelog
  - simple navigation through git history (eg. ignoring style changes)

  --

  ### git commit message

  - __feat__: new feature for the user, not a new feature for build script
  - __fix__: bug fix for the user, not a fix to a build script
  - __docs__: changes to the documentation
  - __style__: formatting, missing semi colons, etc; _no production code change_
  - __refactor__: refactoring production code, eg. _renaming a variable_
  - __test__: adding missing tests, refactoring tests; _no production code change_
  - __chore__: updating grunt tasks etc; _no production code change_

  --

  #### Example

  `docs(readme): add line to resolve libsass issue`

  --

  ### add a tag

  need stuff

  --

  # DEMO TIME

  _automatic changelog with `history.md`_

  ---

  ## Fix issues

  --

  ## Fix & track issues

  --

  ## Fix, track & add automation<br> for issues

  --

  ## Step 1 : qualification

      $ mkdir .github && cd $_
      $ touch issue_template.md

  --

  ### `issue_template.md`

      ### Expected behaviour
      Tell us what should happen.

      ### Actual behaviour
      Tell us what happens instead. Provide a log message if relevant.

      ### I'm seeing this behaviour on
      _Remove this hint: these checkboxes can be checked like this: [x]_

      - [ ] ionic view
      - [ ] iOS device
      - [ ] iOS simulator
      - [ ] Android device
      - [ ] Android simulator

      #### Hardware models
      Example: Samsung Galaxy S6, iPhone 6s

      #### OS versions
      Example: Android 4.4.2, iOS 9.2

      #### Select our environement
      - [ ] Developement
      - [ ] Production

      ### I'm not a dummy, so I've checked these
      - [ ] Download the last version of the app.

      ### So how can we reproduce this?
      _Remove this hint: Pick one of these - use the Preview feature of this editor to get a sense which option we like best_
  --

  ### :tada:

  ![Documentation](/assets/images/git/issue-template.gif)

  --

  ## Step 2 : working on it & commit

  `fix(feature): change behavior close #123`

  ![issue tracking](/assets/images/git/issue-tracking.png)

  --

  ## Step 3 : grab a coffee

  __Because it's already close__

  ---

  ## Project

  --

  ### Kanban

  ![agile way](/assets/images/git/project.png)

  --

  ## Milestones

  ---

  ## Git FAQ

  [firstaidgit.io](http://firstaidgit.io/#/)

  ---

  ## Happy Hacking!
