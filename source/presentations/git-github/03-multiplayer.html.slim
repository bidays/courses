---
title:    'Git & GitHub 101 - Les Bases'
layout:   presentation
noindex:  true
---

| # Workflow

  ---

  ## Topics

  - Commandes (rappel)
  - Branches (organisation)
  - Revues de codes
  - Deploiement

  ---

  ## Utiliser le terminal

  --

  ### Configurer git

  ```sh
  vim .gitconfig
  ```
  ```
  [user]
    name = David Leuliette
    email = dleuliette@gmail.com
  [push]
    default = current
  ```
  --

  ### Associer git & GitHub

  Protip: __Toujours__ cloner en `ssh`

  [http://davidl.fr/git.html](http://davidl.fr/git.html)

  --

  ### Nouveau projet

  ```sh
  $ git clone XXX
  ```
  ```sh
  $ git init
  ```

  --

  > Quand tu sais pas … fait un `status`
  > <br>
  > — Ra’s al Ghul

  --

  ### Rappel : les bases

  Quand je sais pas
  ```sh
  $ git status
  ```

  Lister les branches
  ```sh
  $ git branch
  ```

  Synchroniser votre travail
  ```sh
  $ git fetch origin master
  ```

  Fusionner les branches
  ```sh
  $ git pull origin master
  ```
  --

  ### Rappel : Sauvegarder

  Ajouter le tracking
  ```sh
  $ git add .
  ```

  Sauvegarde
  ```sh
  $ git commit -m "commentaire"
  ```

  --

  ### Rappel : Partager son travail

  ```sh
  $ git push origin master
  ```

  ```sh
  $ git push origin branch-name
  ```

  --

  ### Alias pour les ninjas

  ```sh
  $ git co -
  $ git merge -
  gss
  ```

  [Télécharger oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh)

  ---

  ## Organisation des branches

  --

  Attention au paradoxe temporel

  ![git-time-travel](/assets/images/git/past.jpg)

  --

  ### Nouvelle fonctionnalité

  ```sh
  $ git checkout -b feature/add-commenting
  ```

  --

  ### Travailler avec plusieurs branches

  rename branch
  ```sh
  $ git branch -m feature/old-branch feature/new-branch
  ```

  delete branch
  ```sh
  $ git branch -d feature/merged-branch
  ```

  récupérer une branche distante
  ```sh
  $ git checkout -t origin/feature/update-reviews
  ```

  --

  ### Sauvegarde & synchronisation

  #### Mettre à jour le projet
  ```sh
  $ git stash
  $ git pull --rebase
  $ git stash pop
  ```

  #### Sauvegarde
  ```sh
  $ git commit -am 'Update stuff'
  ```

  #### Partage
  ```sh
  $ git push
  ```

  --

  ### Merge

  ```sh
  $ git co develop
  $ git pull --rebase
  $ git pull --no-ff origin branche
  $ git push
  ```

  --

  ### Annuler (presque) tout avec Git
  ```sh
  $ git revert <SHA>
  ```

  [Voir la liste complète](https://github.com/blog/2019-how-to-undo-almost-anything-with-git)

  ---

  ## Revue de code

  --

  ### Pull-request

  --

  ![pull-request-workflow](/assets/images/git/development-workflow.jpg)
  --

  # DEMO TIME

  ---

  ## Happy Hacking!

  & celebrate

  [10 years of git](https://www.atlassian.com/git/articles/10-years-of-git/)
