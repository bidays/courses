---
code:             git_github
layout:           program
meta_description: 'Formation front-end avec git et GitHub. Obtenir un codage de qualité, évolutif et respectueux des standards avec des architectures avancées.'
breadcrumbs:      ['root', 'programs']
---

section.course
  .row
    .small-12.columns
      p = current_course_data.audience
      p
        'Les participants peuvent venir avec un projet sur lequel travailler afin de mettre en pratique les notions vues sur un cas concret et personnalisé.

  .row
    .large-6.columns
      markdown:
        ### Pré-requis

        - Connaissance d’un environnement Unix (Linux, OSX, …)
        - Connaissance de l’utilisation d’un terminal
        - Un [compte git associé à GitHub](http://davidl.fr/dev/git.html)
        - Avoir vu la trilogie “Retour vers le futur”
    .large-6.columns
      markdown:
        ### Objectifs

        - Connaître les outils, services et méthodologies couramment utilisés
        - Coder de façon évolutive et respectueuse des standards
        - Collaborer rapidement entre plusieurs développeurs
        - Tester de nouvelles fonctionnalités à l’aide de branches

section.program
  .row
    .small-12.columns
      h2 Programme
      p Présentation du planning de formation, des outils et de la méthodologie qui seront employés.
      .panel
        .row
          .small-2.columns
            h3 Git 101
          .small-10.columns
            markdown:
              #### Les Bases

              Présentation générale du fonctionnement de git.

              - Installation
              - Commandes
              - Travailler avec git

              #### Cas pratique

              Session de live coding sur un projet de page web simple.

              - Création d’un repository
              - Développement d’une page HTML
              - Travail collaboratif avec la gestion des branches
              - Sauvegarde des modifications
              - Hébergement sur GitHub
      .panel
        .row
          .small-2.columns
            h3 Git 102
          .small-10.columns
            markdown:
              #### Exploration

              Vérification des notions vues précedement.

              #### Automatisation

              - Avoir une bonne hygiène d’historique
              - Pourquoi avoir un archiviste est important ?
              - Les bonnes pratiques de développement avec git
              - Récolter et solutionner les problèmes
              - Gérer son projet en pilote automatique
      .panel
        .row
          .small-2.columns
            h3 Git 103
          .small-10.columns
            markdown:
              #### Multijoueur

              Travailler efficacement avec une équipe grandissante.

              #### S’organiser pour être serein

              - GUI
              - Utilisation avancée du terminal
              - Les différentes utilisations des branches et le voyage temporel
              - Les avantages d'une bonne revue de code
              - Workflow avancé
              - Fork
      .panel
        .row
          .small-2.columns
            h3 Bonus
          .small-10.columns
            h4 Rétrospective
            p Echanges sur la formation réalisée.
            ul
              li Questions / Réponses sur ce qui a été vu
              li Références, ressources et partage des supports
              li Pistes d’amélioration
